// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pokemon/statgroup.proto

package pokemon

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StatGroup struct {
	Hp                   int32    `protobuf:"varint,1,opt,name=hp,proto3" json:"hp,omitempty"`
	Attack               int32    `protobuf:"varint,2,opt,name=attack,proto3" json:"attack,omitempty"`
	Defense              int32    `protobuf:"varint,3,opt,name=defense,proto3" json:"defense,omitempty"`
	SpecialAttack        int32    `protobuf:"varint,4,opt,name=special_attack,json=specialAttack,proto3" json:"special_attack,omitempty"`
	SpecialDefense       int32    `protobuf:"varint,5,opt,name=special_defense,json=specialDefense,proto3" json:"special_defense,omitempty"`
	Speed                int32    `protobuf:"varint,6,opt,name=speed,proto3" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatGroup) Reset()         { *m = StatGroup{} }
func (m *StatGroup) String() string { return proto.CompactTextString(m) }
func (*StatGroup) ProtoMessage()    {}
func (*StatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0c4f02255907fc5, []int{0}
}

func (m *StatGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatGroup.Unmarshal(m, b)
}
func (m *StatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatGroup.Marshal(b, m, deterministic)
}
func (m *StatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatGroup.Merge(m, src)
}
func (m *StatGroup) XXX_Size() int {
	return xxx_messageInfo_StatGroup.Size(m)
}
func (m *StatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_StatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_StatGroup proto.InternalMessageInfo

func (m *StatGroup) GetHp() int32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *StatGroup) GetAttack() int32 {
	if m != nil {
		return m.Attack
	}
	return 0
}

func (m *StatGroup) GetDefense() int32 {
	if m != nil {
		return m.Defense
	}
	return 0
}

func (m *StatGroup) GetSpecialAttack() int32 {
	if m != nil {
		return m.SpecialAttack
	}
	return 0
}

func (m *StatGroup) GetSpecialDefense() int32 {
	if m != nil {
		return m.SpecialDefense
	}
	return 0
}

func (m *StatGroup) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

type BattleStatGroup struct {
	Hp                            int32    `protobuf:"varint,1,opt,name=hp,proto3" json:"hp,omitempty"`
	Attack                        int32    `protobuf:"varint,2,opt,name=attack,proto3" json:"attack,omitempty"`
	Defense                       int32    `protobuf:"varint,3,opt,name=defense,proto3" json:"defense,omitempty"`
	SpecialAttack                 int32    `protobuf:"varint,4,opt,name=special_attack,json=specialAttack,proto3" json:"special_attack,omitempty"`
	SpecialDefense                int32    `protobuf:"varint,5,opt,name=special_defense,json=specialDefense,proto3" json:"special_defense,omitempty"`
	Speed                         int32    `protobuf:"varint,6,opt,name=speed,proto3" json:"speed,omitempty"`
	Evasion                       int32    `protobuf:"varint,7,opt,name=evasion,proto3" json:"evasion,omitempty"`
	Accuracy                      int32    `protobuf:"varint,8,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	AttackStageMultiplier         int32    `protobuf:"varint,9,opt,name=attack_stage_multiplier,json=attackStageMultiplier,proto3" json:"attack_stage_multiplier,omitempty"`
	DefenseStageMultiplier        int32    `protobuf:"varint,10,opt,name=defense_stage_multiplier,json=defenseStageMultiplier,proto3" json:"defense_stage_multiplier,omitempty"`
	SpecialAttackStageMultiplier  int32    `protobuf:"varint,11,opt,name=special_attack_stage_multiplier,json=specialAttackStageMultiplier,proto3" json:"special_attack_stage_multiplier,omitempty"`
	SpecialDefenseStageMultiplier int32    `protobuf:"varint,12,opt,name=special_defense_stage_multiplier,json=specialDefenseStageMultiplier,proto3" json:"special_defense_stage_multiplier,omitempty"`
	SpeedStageMultiplier          int32    `protobuf:"varint,13,opt,name=speed_stage_multiplier,json=speedStageMultiplier,proto3" json:"speed_stage_multiplier,omitempty"`
	EvasionStageMultiplier        int32    `protobuf:"varint,14,opt,name=evasion_stage_multiplier,json=evasionStageMultiplier,proto3" json:"evasion_stage_multiplier,omitempty"`
	AccuracyStageMultiplier       int32    `protobuf:"varint,15,opt,name=accuracy_stage_multiplier,json=accuracyStageMultiplier,proto3" json:"accuracy_stage_multiplier,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *BattleStatGroup) Reset()         { *m = BattleStatGroup{} }
func (m *BattleStatGroup) String() string { return proto.CompactTextString(m) }
func (*BattleStatGroup) ProtoMessage()    {}
func (*BattleStatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0c4f02255907fc5, []int{1}
}

func (m *BattleStatGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BattleStatGroup.Unmarshal(m, b)
}
func (m *BattleStatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BattleStatGroup.Marshal(b, m, deterministic)
}
func (m *BattleStatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BattleStatGroup.Merge(m, src)
}
func (m *BattleStatGroup) XXX_Size() int {
	return xxx_messageInfo_BattleStatGroup.Size(m)
}
func (m *BattleStatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_BattleStatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_BattleStatGroup proto.InternalMessageInfo

func (m *BattleStatGroup) GetHp() int32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *BattleStatGroup) GetAttack() int32 {
	if m != nil {
		return m.Attack
	}
	return 0
}

func (m *BattleStatGroup) GetDefense() int32 {
	if m != nil {
		return m.Defense
	}
	return 0
}

func (m *BattleStatGroup) GetSpecialAttack() int32 {
	if m != nil {
		return m.SpecialAttack
	}
	return 0
}

func (m *BattleStatGroup) GetSpecialDefense() int32 {
	if m != nil {
		return m.SpecialDefense
	}
	return 0
}

func (m *BattleStatGroup) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *BattleStatGroup) GetEvasion() int32 {
	if m != nil {
		return m.Evasion
	}
	return 0
}

func (m *BattleStatGroup) GetAccuracy() int32 {
	if m != nil {
		return m.Accuracy
	}
	return 0
}

func (m *BattleStatGroup) GetAttackStageMultiplier() int32 {
	if m != nil {
		return m.AttackStageMultiplier
	}
	return 0
}

func (m *BattleStatGroup) GetDefenseStageMultiplier() int32 {
	if m != nil {
		return m.DefenseStageMultiplier
	}
	return 0
}

func (m *BattleStatGroup) GetSpecialAttackStageMultiplier() int32 {
	if m != nil {
		return m.SpecialAttackStageMultiplier
	}
	return 0
}

func (m *BattleStatGroup) GetSpecialDefenseStageMultiplier() int32 {
	if m != nil {
		return m.SpecialDefenseStageMultiplier
	}
	return 0
}

func (m *BattleStatGroup) GetSpeedStageMultiplier() int32 {
	if m != nil {
		return m.SpeedStageMultiplier
	}
	return 0
}

func (m *BattleStatGroup) GetEvasionStageMultiplier() int32 {
	if m != nil {
		return m.EvasionStageMultiplier
	}
	return 0
}

func (m *BattleStatGroup) GetAccuracyStageMultiplier() int32 {
	if m != nil {
		return m.AccuracyStageMultiplier
	}
	return 0
}

func init() {
	proto.RegisterType((*StatGroup)(nil), "pokemon.StatGroup")
	proto.RegisterType((*BattleStatGroup)(nil), "pokemon.BattleStatGroup")
}

func init() { proto.RegisterFile("pokemon/statgroup.proto", fileDescriptor_a0c4f02255907fc5) }

var fileDescriptor_a0c4f02255907fc5 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x93, 0xcf, 0x4a, 0x33, 0x31,
	0x14, 0xc5, 0x69, 0xbf, 0x6f, 0xfa, 0xe7, 0x6a, 0x5b, 0x08, 0xb5, 0x8d, 0xa2, 0x58, 0x0a, 0xa2,
	0x2b, 0x5d, 0x28, 0x22, 0xee, 0x2c, 0x4a, 0x57, 0x6e, 0xec, 0xce, 0xcd, 0x10, 0xa7, 0xb1, 0x1d,
	0x3a, 0x9d, 0x84, 0x49, 0x46, 0xf0, 0x61, 0x7c, 0x0a, 0x5f, 0x50, 0xe6, 0x26, 0x29, 0x4c, 0xe2,
	0x0b, 0xb8, 0xbc, 0x39, 0xe7, 0x77, 0x72, 0x73, 0x20, 0x30, 0x96, 0x62, 0xc3, 0xb7, 0x22, 0xbf,
	0x52, 0x9a, 0xe9, 0x55, 0x21, 0x4a, 0x79, 0x29, 0x0b, 0xa1, 0x05, 0x69, 0x5b, 0x61, 0xfa, 0xdd,
	0x80, 0xee, 0x42, 0x33, 0x3d, 0xaf, 0x44, 0xd2, 0x87, 0xe6, 0x5a, 0xd2, 0xc6, 0xa4, 0x71, 0x11,
	0xbd, 0x34, 0xd7, 0x92, 0x8c, 0xa0, 0xc5, 0xb4, 0x66, 0xc9, 0x86, 0x36, 0xf1, 0xcc, 0x4e, 0x84,
	0x42, 0x7b, 0xc9, 0xdf, 0x79, 0xae, 0x38, 0xfd, 0x87, 0x82, 0x1b, 0xc9, 0x19, 0xf4, 0x95, 0xe4,
	0x49, 0xca, 0xb2, 0xd8, 0x92, 0xff, 0xd1, 0xd0, 0xb3, 0xa7, 0x0f, 0x26, 0xe0, 0x1c, 0x06, 0xce,
	0xe6, 0x82, 0x22, 0xf4, 0x39, 0xfa, 0xd1, 0xe6, 0x0d, 0x21, 0x52, 0x92, 0xf3, 0x25, 0x6d, 0xa1,
	0x6c, 0x86, 0xe9, 0x57, 0x04, 0x83, 0x19, 0xd3, 0x3a, 0xe3, 0x7f, 0x6e, 0xf7, 0xea, 0x7e, 0xfe,
	0xc1, 0x54, 0x2a, 0x72, 0xda, 0x36, 0xf7, 0xdb, 0x91, 0x1c, 0x41, 0x87, 0x25, 0x49, 0x59, 0xb0,
	0xe4, 0x93, 0x76, 0x50, 0xda, 0xcd, 0xe4, 0x16, 0xc6, 0x66, 0xa7, 0x58, 0x69, 0xb6, 0xe2, 0xf1,
	0xb6, 0xcc, 0x74, 0x2a, 0xb3, 0x94, 0x17, 0xb4, 0x8b, 0xd6, 0x03, 0x23, 0x2f, 0x2a, 0xf5, 0x79,
	0x27, 0x92, 0x3b, 0xa0, 0x76, 0xc9, 0x10, 0x04, 0x04, 0x47, 0x56, 0xf7, 0xc9, 0x27, 0x38, 0xad,
	0xb7, 0x11, 0x06, 0xec, 0x61, 0xc0, 0x71, 0xad, 0x1e, 0x3f, 0x66, 0x0e, 0x13, 0xaf, 0xad, 0x30,
	0x67, 0x1f, 0x73, 0x4e, 0xea, 0xf5, 0xf9, 0x41, 0x37, 0x30, 0xc2, 0x02, 0x43, 0xbc, 0x87, 0xf8,
	0x10, 0xd5, 0x5f, 0xde, 0x6f, 0xeb, 0x0d, 0xb9, 0xbe, 0x79, 0xbf, 0xd5, 0x7d, 0xf2, 0x1e, 0x0e,
	0x5d, 0xfb, 0x21, 0x3a, 0x40, 0x74, 0xec, 0x0c, 0x1e, 0x3b, 0xeb, 0xbe, 0xba, 0x0f, 0xf6, 0xd6,
	0xc2, 0x0f, 0x77, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x6e, 0x98, 0xea, 0x8b, 0x03, 0x00,
	0x00,
}
