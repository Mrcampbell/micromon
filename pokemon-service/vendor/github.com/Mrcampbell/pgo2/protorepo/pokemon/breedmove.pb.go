// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pokemon/breedmove.proto

package pokemon

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LearnMethod int32

const (
	LearnMethod_LEARN_METHOD_UNKNOWN    LearnMethod = 0
	LearnMethod_LEVEL_UP                LearnMethod = 1
	LearnMethod_EGG                     LearnMethod = 2
	LearnMethod_TUTOR                   LearnMethod = 3
	LearnMethod_MACHINE                 LearnMethod = 4
	LearnMethod_STADIUM_SURFING_PIKACHU LearnMethod = 5
	LearnMethod_LIGHT_BALL_EGG          LearnMethod = 6
	LearnMethod_COLOSSEUM_PURIFICATION  LearnMethod = 7
	LearnMethod_XD_SHADOW               LearnMethod = 8
	LearnMethod_XD_PURIFICATION         LearnMethod = 9
	LearnMethod_FORM_CHANGE             LearnMethod = 10
)

var LearnMethod_name = map[int32]string{
	0:  "LEARN_METHOD_UNKNOWN",
	1:  "LEVEL_UP",
	2:  "EGG",
	3:  "TUTOR",
	4:  "MACHINE",
	5:  "STADIUM_SURFING_PIKACHU",
	6:  "LIGHT_BALL_EGG",
	7:  "COLOSSEUM_PURIFICATION",
	8:  "XD_SHADOW",
	9:  "XD_PURIFICATION",
	10: "FORM_CHANGE",
}

var LearnMethod_value = map[string]int32{
	"LEARN_METHOD_UNKNOWN":    0,
	"LEVEL_UP":                1,
	"EGG":                     2,
	"TUTOR":                   3,
	"MACHINE":                 4,
	"STADIUM_SURFING_PIKACHU": 5,
	"LIGHT_BALL_EGG":          6,
	"COLOSSEUM_PURIFICATION":  7,
	"XD_SHADOW":               8,
	"XD_PURIFICATION":         9,
	"FORM_CHANGE":             10,
}

func (x LearnMethod) String() string {
	return proto.EnumName(LearnMethod_name, int32(x))
}

func (LearnMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_239b4783ea3a6a28, []int{0}
}

type GetMovesForBreedRequest struct {
	BreedId              string       `protobuf:"bytes,1,opt,name=breed_id,json=breedId,proto3" json:"breed_id,omitempty"`
	VersionGroupId       VersionGroup `protobuf:"varint,2,opt,name=version_group_id,json=versionGroupId,proto3,enum=pokemon.VersionGroup" json:"version_group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetMovesForBreedRequest) Reset()         { *m = GetMovesForBreedRequest{} }
func (m *GetMovesForBreedRequest) String() string { return proto.CompactTextString(m) }
func (*GetMovesForBreedRequest) ProtoMessage()    {}
func (*GetMovesForBreedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239b4783ea3a6a28, []int{0}
}

func (m *GetMovesForBreedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMovesForBreedRequest.Unmarshal(m, b)
}
func (m *GetMovesForBreedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMovesForBreedRequest.Marshal(b, m, deterministic)
}
func (m *GetMovesForBreedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMovesForBreedRequest.Merge(m, src)
}
func (m *GetMovesForBreedRequest) XXX_Size() int {
	return xxx_messageInfo_GetMovesForBreedRequest.Size(m)
}
func (m *GetMovesForBreedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMovesForBreedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMovesForBreedRequest proto.InternalMessageInfo

func (m *GetMovesForBreedRequest) GetBreedId() string {
	if m != nil {
		return m.BreedId
	}
	return ""
}

func (m *GetMovesForBreedRequest) GetVersionGroupId() VersionGroup {
	if m != nil {
		return m.VersionGroupId
	}
	return VersionGroup_UNKNOWN_VERSION_GROUP
}

type GetMovesForBreedResponse struct {
	BreedMoves           []*BreedMove `protobuf:"bytes,1,rep,name=breed_moves,json=breedMoves,proto3" json:"breed_moves,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetMovesForBreedResponse) Reset()         { *m = GetMovesForBreedResponse{} }
func (m *GetMovesForBreedResponse) String() string { return proto.CompactTextString(m) }
func (*GetMovesForBreedResponse) ProtoMessage()    {}
func (*GetMovesForBreedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_239b4783ea3a6a28, []int{1}
}

func (m *GetMovesForBreedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMovesForBreedResponse.Unmarshal(m, b)
}
func (m *GetMovesForBreedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMovesForBreedResponse.Marshal(b, m, deterministic)
}
func (m *GetMovesForBreedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMovesForBreedResponse.Merge(m, src)
}
func (m *GetMovesForBreedResponse) XXX_Size() int {
	return xxx_messageInfo_GetMovesForBreedResponse.Size(m)
}
func (m *GetMovesForBreedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMovesForBreedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMovesForBreedResponse proto.InternalMessageInfo

func (m *GetMovesForBreedResponse) GetBreedMoves() []*BreedMove {
	if m != nil {
		return m.BreedMoves
	}
	return nil
}

type GetRandomMoveSetForBreedRequest struct {
	BreedId              string       `protobuf:"bytes,1,opt,name=breed_id,json=breedId,proto3" json:"breed_id,omitempty"`
	VersionGroupId       VersionGroup `protobuf:"varint,2,opt,name=version_group_id,json=versionGroupId,proto3,enum=pokemon.VersionGroup" json:"version_group_id,omitempty"`
	Level                int32        `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetRandomMoveSetForBreedRequest) Reset()         { *m = GetRandomMoveSetForBreedRequest{} }
func (m *GetRandomMoveSetForBreedRequest) String() string { return proto.CompactTextString(m) }
func (*GetRandomMoveSetForBreedRequest) ProtoMessage()    {}
func (*GetRandomMoveSetForBreedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_239b4783ea3a6a28, []int{2}
}

func (m *GetRandomMoveSetForBreedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRandomMoveSetForBreedRequest.Unmarshal(m, b)
}
func (m *GetRandomMoveSetForBreedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRandomMoveSetForBreedRequest.Marshal(b, m, deterministic)
}
func (m *GetRandomMoveSetForBreedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRandomMoveSetForBreedRequest.Merge(m, src)
}
func (m *GetRandomMoveSetForBreedRequest) XXX_Size() int {
	return xxx_messageInfo_GetRandomMoveSetForBreedRequest.Size(m)
}
func (m *GetRandomMoveSetForBreedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandomMoveSetForBreedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRandomMoveSetForBreedRequest proto.InternalMessageInfo

func (m *GetRandomMoveSetForBreedRequest) GetBreedId() string {
	if m != nil {
		return m.BreedId
	}
	return ""
}

func (m *GetRandomMoveSetForBreedRequest) GetVersionGroupId() VersionGroup {
	if m != nil {
		return m.VersionGroupId
	}
	return VersionGroup_UNKNOWN_VERSION_GROUP
}

func (m *GetRandomMoveSetForBreedRequest) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type GetRandomMoveSetForBreedResponse struct {
	MoveOne              *MoveSummary `protobuf:"bytes,1,opt,name=move_one,json=moveOne,proto3" json:"move_one,omitempty"`
	MoveTwo              *MoveSummary `protobuf:"bytes,2,opt,name=move_two,json=moveTwo,proto3" json:"move_two,omitempty"`
	MoveThree            *MoveSummary `protobuf:"bytes,3,opt,name=move_three,json=moveThree,proto3" json:"move_three,omitempty"`
	MoveFour             *MoveSummary `protobuf:"bytes,4,opt,name=move_four,json=moveFour,proto3" json:"move_four,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetRandomMoveSetForBreedResponse) Reset()         { *m = GetRandomMoveSetForBreedResponse{} }
func (m *GetRandomMoveSetForBreedResponse) String() string { return proto.CompactTextString(m) }
func (*GetRandomMoveSetForBreedResponse) ProtoMessage()    {}
func (*GetRandomMoveSetForBreedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_239b4783ea3a6a28, []int{3}
}

func (m *GetRandomMoveSetForBreedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRandomMoveSetForBreedResponse.Unmarshal(m, b)
}
func (m *GetRandomMoveSetForBreedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRandomMoveSetForBreedResponse.Marshal(b, m, deterministic)
}
func (m *GetRandomMoveSetForBreedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRandomMoveSetForBreedResponse.Merge(m, src)
}
func (m *GetRandomMoveSetForBreedResponse) XXX_Size() int {
	return xxx_messageInfo_GetRandomMoveSetForBreedResponse.Size(m)
}
func (m *GetRandomMoveSetForBreedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandomMoveSetForBreedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRandomMoveSetForBreedResponse proto.InternalMessageInfo

func (m *GetRandomMoveSetForBreedResponse) GetMoveOne() *MoveSummary {
	if m != nil {
		return m.MoveOne
	}
	return nil
}

func (m *GetRandomMoveSetForBreedResponse) GetMoveTwo() *MoveSummary {
	if m != nil {
		return m.MoveTwo
	}
	return nil
}

func (m *GetRandomMoveSetForBreedResponse) GetMoveThree() *MoveSummary {
	if m != nil {
		return m.MoveThree
	}
	return nil
}

func (m *GetRandomMoveSetForBreedResponse) GetMoveFour() *MoveSummary {
	if m != nil {
		return m.MoveFour
	}
	return nil
}

type BreedMove struct {
	BreedId              string       `protobuf:"bytes,1,opt,name=breed_id,json=breedId,proto3" json:"breed_id,omitempty"`
	VersionGroupId       VersionGroup `protobuf:"varint,2,opt,name=version_group_id,json=versionGroupId,proto3,enum=pokemon.VersionGroup" json:"version_group_id,omitempty"`
	MoveId               string       `protobuf:"bytes,3,opt,name=move_id,json=moveId,proto3" json:"move_id,omitempty"`
	LearnMethodId        LearnMethod  `protobuf:"varint,4,opt,name=learn_method_id,json=learnMethodId,proto3,enum=pokemon.LearnMethod" json:"learn_method_id,omitempty"`
	Level                int32        `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BreedMove) Reset()         { *m = BreedMove{} }
func (m *BreedMove) String() string { return proto.CompactTextString(m) }
func (*BreedMove) ProtoMessage()    {}
func (*BreedMove) Descriptor() ([]byte, []int) {
	return fileDescriptor_239b4783ea3a6a28, []int{4}
}

func (m *BreedMove) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BreedMove.Unmarshal(m, b)
}
func (m *BreedMove) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BreedMove.Marshal(b, m, deterministic)
}
func (m *BreedMove) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BreedMove.Merge(m, src)
}
func (m *BreedMove) XXX_Size() int {
	return xxx_messageInfo_BreedMove.Size(m)
}
func (m *BreedMove) XXX_DiscardUnknown() {
	xxx_messageInfo_BreedMove.DiscardUnknown(m)
}

var xxx_messageInfo_BreedMove proto.InternalMessageInfo

func (m *BreedMove) GetBreedId() string {
	if m != nil {
		return m.BreedId
	}
	return ""
}

func (m *BreedMove) GetVersionGroupId() VersionGroup {
	if m != nil {
		return m.VersionGroupId
	}
	return VersionGroup_UNKNOWN_VERSION_GROUP
}

func (m *BreedMove) GetMoveId() string {
	if m != nil {
		return m.MoveId
	}
	return ""
}

func (m *BreedMove) GetLearnMethodId() LearnMethod {
	if m != nil {
		return m.LearnMethodId
	}
	return LearnMethod_LEARN_METHOD_UNKNOWN
}

func (m *BreedMove) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func init() {
	proto.RegisterEnum("pokemon.LearnMethod", LearnMethod_name, LearnMethod_value)
	proto.RegisterType((*GetMovesForBreedRequest)(nil), "pokemon.GetMovesForBreedRequest")
	proto.RegisterType((*GetMovesForBreedResponse)(nil), "pokemon.GetMovesForBreedResponse")
	proto.RegisterType((*GetRandomMoveSetForBreedRequest)(nil), "pokemon.GetRandomMoveSetForBreedRequest")
	proto.RegisterType((*GetRandomMoveSetForBreedResponse)(nil), "pokemon.GetRandomMoveSetForBreedResponse")
	proto.RegisterType((*BreedMove)(nil), "pokemon.BreedMove")
}

func init() { proto.RegisterFile("pokemon/breedmove.proto", fileDescriptor_239b4783ea3a6a28) }

var fileDescriptor_239b4783ea3a6a28 = []byte{
	// 609 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0xae, 0x9b, 0xa6, 0x89, 0x4f, 0xfe, 0xb6, 0xa3, 0xf3, 0x17, 0x12, 0xc2, 0x82, 0x90, 0x55,
	0x60, 0xd1, 0x8a, 0x74, 0x8b, 0x84, 0xdc, 0xc4, 0x71, 0xac, 0xfa, 0x52, 0x8d, 0xed, 0xb6, 0xb0,
	0x19, 0xb5, 0x64, 0xa0, 0x15, 0x89, 0x27, 0xb5, 0x9d, 0x54, 0x3c, 0x07, 0xaf, 0xc6, 0x82, 0x25,
	0x0f, 0xc0, 0x43, 0xa0, 0x19, 0xe7, 0xc6, 0xa5, 0x11, 0x1b, 0xd8, 0xe5, 0xe4, 0x7c, 0xb7, 0x99,
	0xe3, 0x33, 0x50, 0x1d, 0x8b, 0x0f, 0x7c, 0x24, 0xe2, 0xc3, 0xab, 0x84, 0xf3, 0xc1, 0x48, 0x4c,
	0xf9, 0xc1, 0x38, 0x11, 0x99, 0xc0, 0xd2, 0xac, 0x51, 0xaf, 0xcf, 0x11, 0x53, 0x9e, 0xa4, 0x37,
	0x22, 0x7e, 0x9f, 0x88, 0xc9, 0x38, 0x07, 0xd5, 0x71, 0xde, 0x5b, 0x12, 0x9b, 0x13, 0xa8, 0x5a,
	0x3c, 0x73, 0xc5, 0x94, 0xa7, 0x3d, 0x91, 0x1c, 0x4b, 0x59, 0xca, 0x6f, 0x27, 0x3c, 0xcd, 0xf0,
	0x11, 0x94, 0x95, 0x0d, 0xbb, 0x19, 0xd4, 0xb4, 0x86, 0xd6, 0xd2, 0x69, 0x49, 0xd5, 0xf6, 0x00,
	0x5f, 0x01, 0x99, 0xe9, 0x33, 0x65, 0x20, 0x21, 0x9b, 0x0d, 0xad, 0xb5, 0xdb, 0x7e, 0x70, 0x30,
	0x33, 0x39, 0x38, 0xcb, 0x01, 0x96, 0xec, 0xd3, 0xdd, 0xe9, 0x4a, 0x65, 0x0f, 0x9a, 0x3e, 0xd4,
	0x7e, 0xb5, 0x4d, 0xc7, 0x22, 0x4e, 0x39, 0x1e, 0x41, 0x25, 0xf7, 0x95, 0x31, 0xd3, 0x9a, 0xd6,
	0x28, 0xb4, 0x2a, 0x6d, 0x5c, 0xe8, 0x2a, 0xb0, 0x64, 0x52, 0xb8, 0x9a, 0xff, 0x4c, 0x9b, 0x9f,
	0x34, 0x78, 0x62, 0xf1, 0x8c, 0x5e, 0xc6, 0x03, 0x31, 0x92, 0x7f, 0x05, 0x3c, 0xfb, 0x87, 0x07,
	0xc2, 0x7d, 0x28, 0x0e, 0xf9, 0x94, 0x0f, 0x6b, 0x85, 0x86, 0xd6, 0x2a, 0xd2, 0xbc, 0x68, 0x7e,
	0xd3, 0xa0, 0x71, 0x7f, 0xaa, 0xd9, 0x79, 0x0f, 0xa1, 0x2c, 0x4f, 0xca, 0x44, 0xcc, 0x55, 0xac,
	0x4a, 0x7b, 0x7f, 0xe1, 0xa9, 0x38, 0x93, 0xd1, 0xe8, 0x32, 0xf9, 0x48, 0x4b, 0x12, 0xe5, 0xc7,
	0x4b, 0x42, 0x76, 0x27, 0x54, 0xc8, 0xb5, 0x84, 0xf0, 0x4e, 0xe0, 0x11, 0x40, 0x4e, 0xb8, 0x4e,
	0x38, 0x57, 0x09, 0xef, 0xa3, 0xe8, 0x8a, 0x22, 0x61, 0xf8, 0x02, 0x54, 0xc1, 0xde, 0x89, 0x49,
	0x52, 0xdb, 0x5a, 0xc3, 0x51, 0x61, 0x7a, 0x62, 0x92, 0x34, 0x3f, 0x6b, 0xa0, 0x2f, 0xc6, 0xf3,
	0x57, 0xaf, 0xbb, 0x0a, 0xea, 0x70, 0x92, 0x57, 0x50, 0xd2, 0xdb, 0xb2, 0xb4, 0x07, 0xf8, 0x12,
	0xf6, 0x86, 0xfc, 0x32, 0x89, 0xd9, 0x88, 0x67, 0xd7, 0x42, 0x79, 0x6f, 0x29, 0xe1, 0x65, 0x76,
	0x47, 0xf6, 0x5d, 0xd5, 0xa6, 0x3b, 0xc3, 0x65, 0xb1, 0x3a, 0xc5, 0xe2, 0xca, 0x14, 0x9f, 0x7f,
	0xd1, 0xa0, 0xb2, 0x42, 0xc2, 0x1a, 0xec, 0x3b, 0xa6, 0x41, 0x3d, 0xe6, 0x9a, 0x61, 0xdf, 0xef,
	0xb2, 0xc8, 0x3b, 0xf1, 0xfc, 0x73, 0x8f, 0x6c, 0xe0, 0x7f, 0x50, 0x76, 0xcc, 0x33, 0xd3, 0x61,
	0xd1, 0x29, 0xd1, 0xb0, 0x04, 0x05, 0xd3, 0xb2, 0xc8, 0x26, 0xea, 0x50, 0x0c, 0xa3, 0xd0, 0xa7,
	0xa4, 0x80, 0x15, 0x28, 0xb9, 0x46, 0xa7, 0x6f, 0x7b, 0x26, 0xd9, 0xc2, 0xc7, 0x50, 0x0d, 0x42,
	0xa3, 0x6b, 0x47, 0x2e, 0x0b, 0x22, 0xda, 0xb3, 0x3d, 0x8b, 0x9d, 0xda, 0x27, 0x46, 0xa7, 0x1f,
	0x91, 0x22, 0x22, 0xec, 0x3a, 0xb6, 0xd5, 0x0f, 0xd9, 0xb1, 0xe1, 0x38, 0x4c, 0x0a, 0x6d, 0x63,
	0x1d, 0x1e, 0x76, 0x7c, 0xc7, 0x0f, 0x02, 0x33, 0x72, 0xd9, 0x69, 0x44, 0xed, 0x9e, 0xdd, 0x31,
	0x42, 0xdb, 0xf7, 0x48, 0x09, 0x77, 0x40, 0xbf, 0xe8, 0xb2, 0xa0, 0x6f, 0x74, 0xfd, 0x73, 0x52,
	0xc6, 0xff, 0x61, 0xef, 0xa2, 0xfb, 0x23, 0x46, 0xc7, 0x3d, 0xa8, 0xf4, 0x7c, 0xea, 0xb2, 0x4e,
	0xdf, 0xf0, 0x2c, 0x93, 0x40, 0xfb, 0xab, 0x06, 0x64, 0x31, 0xb1, 0x80, 0x27, 0xd3, 0x9b, 0xb7,
	0x1c, 0x5f, 0x03, 0xf9, 0x79, 0x39, 0xb1, 0xb1, 0xb8, 0xbe, 0x7b, 0x9e, 0x8b, 0xfa, 0xd3, 0x35,
	0x88, 0xfc, 0x4b, 0x6f, 0x6e, 0xe0, 0xad, 0xda, 0xfb, 0xdf, 0xee, 0x03, 0xb6, 0x56, 0x05, 0xd6,
	0x2d, 0x72, 0xfd, 0xd9, 0x1f, 0x20, 0xe7, 0x96, 0xc7, 0xfa, 0x9b, 0xf9, 0xe3, 0x78, 0xb5, 0xad,
	0xde, 0xbc, 0xa3, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9a, 0xfe, 0xbd, 0x2b, 0x47, 0x05, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BreedMoveServiceClient is the client API for BreedMoveService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BreedMoveServiceClient interface {
	// This returns ALL the moves for a breed for a given version group
	GetMovesForBreed(ctx context.Context, in *GetMovesForBreedRequest, opts ...grpc.CallOption) (*GetMovesForBreedResponse, error)
	// Get four random, level up learnable moves, perfect for random encounters and generated pokemon for trades
	GetRandomMoveSetForBreed(ctx context.Context, in *GetRandomMoveSetForBreedRequest, opts ...grpc.CallOption) (*GetRandomMoveSetForBreedResponse, error)
}

type breedMoveServiceClient struct {
	cc *grpc.ClientConn
}

func NewBreedMoveServiceClient(cc *grpc.ClientConn) BreedMoveServiceClient {
	return &breedMoveServiceClient{cc}
}

func (c *breedMoveServiceClient) GetMovesForBreed(ctx context.Context, in *GetMovesForBreedRequest, opts ...grpc.CallOption) (*GetMovesForBreedResponse, error) {
	out := new(GetMovesForBreedResponse)
	err := c.cc.Invoke(ctx, "/pokemon.BreedMoveService/GetMovesForBreed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *breedMoveServiceClient) GetRandomMoveSetForBreed(ctx context.Context, in *GetRandomMoveSetForBreedRequest, opts ...grpc.CallOption) (*GetRandomMoveSetForBreedResponse, error) {
	out := new(GetRandomMoveSetForBreedResponse)
	err := c.cc.Invoke(ctx, "/pokemon.BreedMoveService/GetRandomMoveSetForBreed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BreedMoveServiceServer is the server API for BreedMoveService service.
type BreedMoveServiceServer interface {
	// This returns ALL the moves for a breed for a given version group
	GetMovesForBreed(context.Context, *GetMovesForBreedRequest) (*GetMovesForBreedResponse, error)
	// Get four random, level up learnable moves, perfect for random encounters and generated pokemon for trades
	GetRandomMoveSetForBreed(context.Context, *GetRandomMoveSetForBreedRequest) (*GetRandomMoveSetForBreedResponse, error)
}

// UnimplementedBreedMoveServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBreedMoveServiceServer struct {
}

func (*UnimplementedBreedMoveServiceServer) GetMovesForBreed(ctx context.Context, req *GetMovesForBreedRequest) (*GetMovesForBreedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMovesForBreed not implemented")
}
func (*UnimplementedBreedMoveServiceServer) GetRandomMoveSetForBreed(ctx context.Context, req *GetRandomMoveSetForBreedRequest) (*GetRandomMoveSetForBreedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRandomMoveSetForBreed not implemented")
}

func RegisterBreedMoveServiceServer(s *grpc.Server, srv BreedMoveServiceServer) {
	s.RegisterService(&_BreedMoveService_serviceDesc, srv)
}

func _BreedMoveService_GetMovesForBreed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMovesForBreedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BreedMoveServiceServer).GetMovesForBreed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pokemon.BreedMoveService/GetMovesForBreed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BreedMoveServiceServer).GetMovesForBreed(ctx, req.(*GetMovesForBreedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BreedMoveService_GetRandomMoveSetForBreed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRandomMoveSetForBreedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BreedMoveServiceServer).GetRandomMoveSetForBreed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pokemon.BreedMoveService/GetRandomMoveSetForBreed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BreedMoveServiceServer).GetRandomMoveSetForBreed(ctx, req.(*GetRandomMoveSetForBreedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BreedMoveService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pokemon.BreedMoveService",
	HandlerType: (*BreedMoveServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMovesForBreed",
			Handler:    _BreedMoveService_GetMovesForBreed_Handler,
		},
		{
			MethodName: "GetRandomMoveSetForBreed",
			Handler:    _BreedMoveService_GetRandomMoveSetForBreed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pokemon/breedmove.proto",
}
