syntax = "proto3";

package pokemon;

option go_package = "pokemon";

import "google/api/annotations.proto";
import "pokemon/pokemonbattlemask.proto";

service BattleService {
  rpc Create(CreateBattleRequest) returns (CreateBattleResponse) {
    option (google.api.http) ={
      post: "/v1/battle",
      body: "*"
    };
  }

  rpc GetBattle(GetBattleRequest) returns (GetBattleResponse) {
    option (google.api.http) ={
      get: "/v1/battle/{id}"
    };
  }

  rpc SubmitTurn(SubmitTurnRequest) returns (SubmitTurnResponse) {
    option (google.api.http) ={
      post: "/v1/battle/{battle_id}/turn/{player_id}",
      body: "turn"
    };
  }
}

message Battle {
  string id = 1;
  pokemon.PokemonBattleMask pokemon_a_battle_mask = 2;
  pokemon.PokemonBattleMask pokemon_b_battle_mask = 3;
  string player_a_id = 4;
  string player_b_id = 5;
  int32 duration = 6;
  BattleState state = 7;
  // todo: add history
}

enum BattleState {
  BATTLE_STATE_UNKNOWN = 0;
  WAITING_ON_BOTH_PLAYERS = 1;
  WAITING_ON_PLAYER_A = 2;
  WAITING_ON_PLAYER_B = 3;
  MOVE_RESULTS_QUEUED = 4;
  BATTLE_OVER = 5;
}

message CreateBattleRequest {
  string pokemon_a_id = 1;
  string pokemon_b_id = 2;
}

message CreateBattleResponse {
  Battle battle = 1;
}

message GetBattleRequest {
  string id = 1;
}

message GetBattleResponse {
  Battle battle = 1;
}

message SubmitTurnRequest {
  string battle_id = 1;
  string player_id = 2;
  PlayerTurn turn = 3;
}

message SubmitTurnResponse {
  string battle_id = 1;
  string player_id = 2;
  PlayerTurn turn = 3;
}

message BattleRound {
  PlayerTurn player_a_turn = 1;
  PlayerTurn player_b_turn = 2;
}

message PlayerTurn {
  bool is_attack = 1;
  PlayerAttack attack = 2;
  bool is_use_item = 3;
  PlayerItemUse item = 4;
}

message PlayerAttack {
  int32 pokemon_move_slot = 1;
}

message PlayerItemUse {
  int32 item_slot = 1;
}